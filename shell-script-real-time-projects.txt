shell-script real time scenario=============================================

1.Write a shell script function to find and kill all the zombie processes.
2.Find the first 10 biggest files in the file system and write the output to a file.
3.Shell script to gracefully unmount a disk.
4.shell script to send email
5.Shell script to monitor CPU, Memory, and Disk usage and send the output to a file in table format and send an alert if either of them exceeds a certain threshold.
6.Shell script to find the files created and their sizes. It should accept the number of days as input. Or a from and to date format as inputs.
7.Write a shell script to automate the process of creating new user accounts on a Linux server and setting up their permissions and SSH access.
8.Write a shell script to the list of users logged in by date and write it to an output file.
9.Shell script to Copy files recursively to remote hosts
10.Shell script that displays the number of failed login attempts by IP address and location.
11.Shell script parses a log file and forwards a specific value with a timestamp to an output file.
12.Write a shell script to automate the process of rotating log files and compressing old files to save disk space.
13.Write a shell script to check the status of a list of URLs and send an email notification if any of them are down.
14.Write a shell script to automate the process of updating a list of servers with the latest security patches...
==================================================================================================================================
1..
#!/bin/bash

# Function to find and kill zombie processes
kill_zombies() {
  # Use `ps` to list processes with status 'Z' (zombie)
  zombies=$(ps aux | grep 'Z' | awk '{print $2}')

  if [ -z "$zombies" ]; then
    echo "No zombie processes found."
  else
    echo "Zombie processes found. Killing them..."
    # Use `kill` to send a signal to each zombie process
    kill -9 $zombies
    echo "Zombie processes killed."
  fi
}

# Call the function
kill_zombies
===================================================================================
sysyeminfo.sh--------------------------------------------------

#!/bin/bash

# Get CPU usage
cpu_usage=$(top -bn1 | grep "Cpu(s)" | awk '{print $2}')

# Get memory usage
memory_usage=$(free -m | awk 'NR==2{printf "%.2f%%", $3*100/$2}')

# Get disk usage
disk_usage=$(df -h / | awk 'NR==2{print $5}')

# Get network statistics
network_stats=$(ifconfig eth0 | grep "RX packets\|TX packets")

echo "CPU Usage: $cpu_usage"
echo "Memory Usage: $memory_usage"
echo "Disk Usage: $disk_usage"
echo "Network Statistics:"
echo "$network_stats"
===============================================================================================================================

zombie.sh-----------------------------------------

#!/bin/bash

# Function to find and kill zombie processes
kill_zombies() {
  zombies=$(ps aux | awk '$8=="Z" {print $2}')

  if [ -z "$zombies" ]; then
    echo "No zombie processes found."
  else
    echo "Zombie processes found. Killing them..."
    # Iterate through each zombie process and attempt to kill it
    for pid in $zombies; do
      if ps -p "$pid" > /dev/null; then
        kill -9 "$pid"
        echo "Killed zombie process with PID $pid."
      else
        echo "Process with PID $pid not found. It may have already been terminated."
      fi
    done
    echo "Zombie processes killed."
  fi
}

# Call the function
kill_zombies



